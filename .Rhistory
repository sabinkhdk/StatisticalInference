q()
setwd("~/GitHub/StatisticalInference")
??rexp
print("Sabin")
simdata <- rexp(nsample * numberOfSimulations, lambda)
lambda = 0.2  # rate parameter
mn = 1/lambda # mean of the distribution
nsample = 40  # number of samples
nsim = 1000   # Number of simulations
set.seed(12345)  # For reproducibilty
simdata <- rexp(nsample * numberOfSimulations, lambda)
simdata <- rexp(nsample * nsim, lambda)
hist(simdata)
simdata <- rexp(nsample, lambda)
hist(simdata)
simdata <- replicate(nsim, rexp(nsample, lambda))
simdata <- matrix(replicate(nsim, rexp(nsample, lambda)))
View(simdata)
simdata <- matrix(replicate(nsim, rexp(nsample, lambda)), nrows=nsim)
simdata <- matrix(replicate(nsim, rexp(nsample, lambda)), nrow=nsim)
View(simdata)
mean_simdata <- apply(simdata, 2, mean)
amean <- mean(mean_simdata)
mean_data <- mean(mean_simdata)
hist(mean_simdata)
hist(mean_simdata, bin=0.1)
qplot(mean_simdata, bin=0.1)
sd_simdata <- sd(mean_simdata)
sd <- mn * (1/sqrt(nsample))
nsample
1/0.2
5/sqrt(40)
mean_simdata <- apply(simdata, 1, mean)
mean_simdata <- apply(simdata, 2, mean)
mean_data
sd(mean_data)
sd(mean_simdata)
var(mean_simdata)
sd(mean_simdata)
sd(simdata)
dim(simdata)
mean_simdata <- apply(simdata, 1, mean)
sd(mean_simdata)
mean_simdata <- apply(simdata, 2, mean)
mean_simdata <- apply(simdata, 1, mean)
hist(mean_Data)
hist(mean_data)
hist(mean_simdata)
mean(mean_Data)
mean(mean_simdata)
sd(mean_simdata)
mean_simdata_distribution <- apply(simdata, 1, mean)
mean_simdata <- mean(mean_simdata_distribution)
sd_simdata <- sd(mean_simdata_distribution)
sd_simdata
sd <- mn/(sqrt(nsample))
sd
print(plot)
plot <- ggplot(mean_simdata_distribution, aes(x = means)) +
geom_histogram(binwidth=0.1, aes(y=..density..), alpha=0.2)
library(ggplot)
library(ggplot2)
plot <- ggplot(mean_simdata_distribution, aes(x = means))
plot <- ggplot(as.data.frame(mean_simdata_distribution), aes(x = means))
cc <- as.data.frame(mean_simdata_distribution)
plot(cc)
head(cc)
hist(cc)
plot <- ggplot(as.data.frame(mean_simdata_distribution), aes(x = means))
ggplot(as.data.frame(mean_simdata_distribution), aes(x = means))
head(cc)
ggplot(as.data.frame(mean_simdata_distribution), aes(x = mean_simdata_distribution))
ggplot(as.data.frame(cc), aes(x = mean_simdata_distribution))
ggplot(data=as.data.frame(cc), aes(x = mean_simdata_distribution))
df <- as.data.frame(mean_simdata_distribution)
qplot(df, aes(mean_simdata_distribution))
head(df)
qplot(df, aes(x=mean_simdata_distribution))
qplot(df, aes(x=mean_simdata_distribution), geom_stats("identity"))
df <- data.frame(mean_simdata_distribution)
ggplot(df, aes(x = mean_simdata_distribution))
ggplot(df, aes(x = mean_simdata_distribution))+geom_histogram(binwidth=0.1)
plot <- ggplot(df, aes(x = mean_simdata_distribution)) +
geom_histogram(binwidth=0.1, aes(y=..density..), alpha=0.2)
print(plot)
plot <- ggplot(df, aes(x = mean_simdata_distribution)) +
geom_histogram(binwidth=0.05, aes(y=..density..), alpha=0.2)
print(plot)
plot <- ggplot(df, aes(x = mean_simdata_distribution)) +
geom_histogram(binwidth=0.1, aes(y=..density..), alpha=0.8)
print(plot)
geom_histogram(binwidth=0.01, aes(y=..density..), alpha=0.8)
plot <- plot +  stat_function(fun = dnorm, arg = list(mean = mn , sd = sd), colour = "red", size=1) +
geom_vline(xintercept = mu, size=1, colour="#CC0000") + geom_density(colour="blue", size=1)
plot <- ggplot(df, aes(x = mean_simdata_distribution)) +
geom_histogram(binwidth=0.01, aes(y=..density..), alpha=0.8)
print(plot)
geom_histogram(binwidth=0.05, aes(y=..density..), alpha=0.8)
plot <- ggplot(df, aes(x = mean_simdata_distribution)) +
geom_histogram(binwidth=0.05, aes(y=..density..), alpha=0.8)
print(plot)
plot <- ggplot(df, aes(x = mean_simdata_distribution)) +
geom_histogram(binwidth=0.05, aes(y=..density..), alpha=0.8)
plot <- plot +  stat_function(fun = dnorm, arg = list(mean = mn , sd = sd), colour = "red", size=1) +
geom_vline(xintercept = mn, size=1, colour="#CC0000") + geom_density(colour="blue", size=1)
print(plot)
plot <- ggplot(df, aes(x = mean_simdata_distribution)) +
geom_histogram(binwidth=0.05, aes(y=..density..), alpha=0.8)
plot <- plot +  stat_function(fun = dnorm, arg = list(mean = mn , sd = sd), colour = "red", size=1) +
geom_vline(xintercept = mn, size=1, colour="#CC0000") + geom_density(colour="blue", size=1)
plot < plot + geom_vline(xintercept = meansimdata, size=1, colour="#0000CC")
plot <- plot + scale_x_continuous(breaks=seq(mn-3,mn+3,1), limits=c(mn-3,mn+3))
print(plot)
plot <- plot + geom_vline(xintercept = meansimdata, size=1, colour="#0000CC")
plot <- ggplot(df, aes(x = mean_simdata_distribution)) +
geom_histogram(binwidth=0.05, aes(y=..density..), alpha=0.8)
plot <- plot +  stat_function(fun = dnorm, arg = list(mean = mn , sd = sd), colour = "red", size=1) +
geom_vline(xintercept = mn, size=1, colour="#CC0000") + geom_density(colour="blue", size=1)
plot <- plot + geom_vline(xintercept = meansimdata, size=1, colour="#0000CC")
plot <- ggplot(df, aes(x = mean_simdata_distribution)) +
geom_histogram(binwidth=0.05, aes(y=..density..), alpha=0.8)
plot <- plot +  stat_function(fun = dnorm, arg = list(mean = mn , sd = sd), colour = "red", size=1) +
geom_vline(xintercept = mn, size=1, colour="#CC0000") + geom_density(colour="blue", size=1)
plot <- plot + geom_vline(xintercept = meansimdata, size=1, colour="#0000CC") +
scale_x_continuous(breaks=seq(mn-3,mn+3,1), limits=c(mn-3,mn+3))
meansimdata
plot <- ggplot(df, aes(x = mean_simdata_distribution)) +
geom_histogram(binwidth=0.05, aes(y=..density..), alpha=0.8)
plot <- plot +  stat_function(fun = dnorm, arg = list(mean = mn , sd = sd), colour = "red", size=1) +
geom_vline(xintercept = mn, size=1, colour="#CC0000") + geom_density(colour="blue", size=1)
plot <- plot + geom_vline(xintercept = mean_simdata, size=1, colour="#0000CC") +
scale_x_continuous(breaks=seq(mn-3,mn+3,1), limits=c(mn-3,mn+3))
print(plot)
plot <- ggplot(df, aes(x = mean_simdata_distribution)) +
geom_histogram(binwidth=0.1, aes(y=..density..), alpha=0.8)
plot <- plot +  stat_function(fun = dnorm, arg = list(mean = mn , sd = sd), colour = "red", size=1) +
geom_vline(xintercept = mn, size=1, colour="#CC0000") + geom_density(colour="blue", size=1)
plot <- plot + geom_vline(xintercept = mean_simdata, size=1, colour="#0000CC") +
scale_x_continuous(breaks=seq(mn-3,mn+3,1), limits=c(mn-3,mn+3))
print(plot)
plot <- ggplot(df, aes(x = mean_simdata_distribution)) +
geom_histogram(binwidth=0.1, aes(y=..density..), alpha=0.8)
plot <- plot +  stat_function(fun = dnorm, arg = list(mean = mn , sd = sd), colour = "red", size=1) +
geom_vline(xintercept = mn, size=1) + geom_density(colour="blue", size=1)
plot <- plot + geom_vline(xintercept = mean_simdata, size=1) +
scale_x_continuous(breaks=seq(mn-3,mn+3,1), limits=c(mn-3,mn+3))
print(plot)
df <- data.frame(mean_simdata_distribution)
plot <- ggplot(df, aes(x = mean_simdata_distribution)) +
geom_histogram(binwidth=0.1, aes(y=..density..), alpha=0.8)
plot <- plot +  stat_function(fun = dnorm, arg = list(mean = mn , sd = sd), colour = "red", size=1) +
geom_vline(xintercept = mn, size=1, colour="#CC0000") + geom_density(colour="blue", size=1)
plot <- plot + geom_vline(xintercept = mean_simdata, size=1, colour="#0000CC") +
scale_x_continuous(breaks=seq(mn-3,mn+3,1), limits=c(mn-3,mn+3))
print(plot)
knit2html()
library(knir)
library(knitr)
df <- data.frame(mean_simdata_distribution)
plot <- ggplot(df, aes(x = mean_simdata_distribution)) +
geom_histogram(binwidth=0.1, aes(y=..density..), alpha=0.8)
plot <- plot +  stat_function(fun = dnorm, arg = list(mean = mn , sd = sd), colour = "red", size=1) +
geom_vline(xintercept = mn, size=1, colour="#CC0000") + geom_density(colour="blue", size=1)
plot <- plot + geom_vline(xintercept = mean_simdata, size=1, colour="#0000CC") +
scale_x_continuous(breaks=seq(mn-3,mn+3,1), limits=c(mn-3,mn+3))
print(plot)
plot <- ggplot(df, aes(x = mean_simdata_distribution)) +
geom_histogram(binwidth=0.1, aes(y=..density..), alpha=0.8)
plot <- plot +  stat_function(fun = dnorm, arg = list(mean = mn , sd = sd), colour = "red", size=1) +
geom_vline(xintercept = mn, size=1, colour="#CC0000") + geom_density(colour="blue", size=1)
plot <- plot + geom_vline(xintercept = mean_simdata, size=1, colour="#0000CC") +
scale_x_continuous(breaks=seq(mn-3,mn+3,1), limits=c(mn-3,mn+3))
print(plot)
knit("ProjectReport.Rmd")
knit("ProjectReport.Rmd", "test.html")
??knit
library(ggplot2)
df <- data.frame(mean_simdata_distribution)
plot <- ggplot(df, aes(x = mean_simdata_distribution)) +
geom_histogram(binwidth=0.1, aes(y=..density..), alpha=0.8)
plot <- plot +  stat_function(fun = dnorm, arg = list(mean = mn , sd = sd), colour = "red", size=1) +
geom_vline(xintercept = mn, size=1, colour="#CC0000") + geom_density(colour="blue", size=1)
plot <- plot + geom_vline(xintercept = mean_simdata, size=1, colour="#0000CC") +
scale_x_continuous(breaks=seq(mn-3,mn+3,1), limits=c(mn-3,mn+3))
print(plot)
knit("ProjectReoprt.Rmd")
knit("ProjectReport.Rmd")
markdown2html(input="")
markdown2html(input="ProjectReport.md", output="ProjectReport.html")
markdownToHTML(input="ProjectReport.md", output="ProjectReport.html")
markdownToHTML("ProjectReport.md", output="ProjectReport.html")
plot <- ggplot(df, aes(x = mean_simdata_distribution)) +
geom_histogram(binwidth=0.1, alpha=0.8)
plot <- plot +  stat_function(fun = dnorm, arg = list(mean = mn , sd = sd), colour = "red", size=1) +
geom_vline(xintercept = mn, size=1, colour="#CC0000") + geom_density(colour="blue", size=1)
print(plot)
plot <- ggplot(df, aes(x = mean_simdata_distribution)) +
geom_histogram(binwidth=0.1, aes(y=..density..), alpha=0.8)
print(plot)
plot <- plot +  stat_function(fun = dnorm, arg = list(mean = mn , sd = sd), colour = "red", size=1)
print(plot)
plot <- plot +  stat_function(fun = dnorm, arg = list(mean = mn , sd = sd), colour = "red", size=1) +
geom_vline(xintercept = mn, size=1, colour="#CC0000")
print(plot)
plot <- ggplot(df, aes(x = mean_simdata_distribution)) +
geom_histogram(binwidth=0.1, aes(y=..density..), alpha=0.8)
plot <- plot +  stat_function(fun = dnorm, arg = list(mean = mn , sd = sd), colour = "red", size=1) +
geom_vline(xintercept = mn, size=1, colour="#CC0000")
plot <- plot +  stat_function(fun = dnorm, arg = list(mean = mn_simdata , sd = sd_simdata), colour = "blue", size=1) + geom_vline(xintercept = mn, size=1, colour="#0000CC")
print(plot)
plot <- ggplot(df, aes(x = mean_simdata_distribution)) +
geom_histogram(binwidth=0.1, aes(y=..density..), alpha=0.8)
plot <- plot +  stat_function(fun = dnorm, arg = list(mean = mn , sd = sd), colour = "red", size=1) +
geom_vline(xintercept = mn, size=1, colour="#CC0000")
plot <- plot +  stat_function(fun = dnorm, arg = list(mean = mean_simdata , sd = sd_simdata), colour = "blue", size=1) + geom_vline(xintercept = mn, size=1, colour="#0000CC")
print(plot)
plot <- ggplot(df, aes(x = mean_simdata_distribution)) + geom_histogram(binwidth = 0.1,aes(y = ..density..))
plot(plot)
plot <- ggplot(df, aes(x = mean_simdata_distribution)) + geom_histogram(binwidth = 0.1,aes(y = ..density..))
plot <- plot + geom_vline(xintercept=mean_simdata,size=1.0, color="grey100") +
stat_function(fun=dnorm,args=list( mean=mean_simdata, sd=sd_simdata),color = "yellow", size = 1.0)
plot <- plot +geom_vline(xintercept=mn,size=1.0,color="orange1",linetype = "longdash") +
stat_function(fun=dnorm,args=list( mean=mn, sd=sd_th),color = "red", size = 1.0)
print(plot)
plot <- ggplot(df, aes(x = mean_simdata_distribution)) + geom_histogram(binwidth = 0.1,aes(y = ..density..))
plot <- plot + geom_vline(xintercept=mean_simdata,size=1.0, color="grey100") +
stat_function(fun=dnorm,args=list( mean=mean_simdata, sd=sd_simdata),color = "yellow", size = 1.0)
plot <- plot +geom_vline(xintercept=mn,size=1.0,color="red",linetype = "longdash") +
stat_function(fun=dnorm,args=list( mean=mn, sd=sd_th),color = "red", size = 1.0)
print(plot)
plot <- ggplot(df, aes(x = mean_simdata_distribution)) + geom_histogram(binwidth = 0.1,aes(y = ..density..))
plot <- plot + geom_vline(xintercept=mean_simdata,size=1.0, color="blue") +
stat_function(fun=dnorm,args=list( mean=mean_simdata, sd=sd_simdata),color = "blue", size = 1.0)
plot <- plot +geom_vline(xintercept=mn,size=1.0,color="red",linetype = "longdash") +
stat_function(fun=dnorm,args=list( mean=mn, sd=sd_th),color = "red", size = 1.0)
print(plot)
Mean of simulated data : `r mean_simdata`
q()
