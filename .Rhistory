model00 <- lm(mpg~am, data=mtcars); val[1] <- summary(model00)$adj.r.squared
model01 <- lm(mpg~am+cyl, data=mtcars); val[2] <- summary(model01)$adj.r.squared
model02 <- lm(mpg~am+cyl+disp , data=mtcars); val[3] <- summary(model02)$adj.r.squared
model03 <- lm(mpg~am+cyl+hp, data=mtcars); val[4] <- summary(model03)$adj.r.squared
model04 <- lm(mpg~am+cyl+drat, data=mtcars); val[5] <- summary(model04)$adj.r.squared
model05 <- lm(mpg~am+cyl+wt, data=mtcars); val[6] <- summary(model05)$adj.r.squared
model06 <- lm(mpg~am+cyl+wt+qsec, data=mtcars); val[7] <- summary(model06)$adj.r.squared
model07 <- lm(mpg~am+cyl+wt+vs, data=mtcars); val[8] <- summary(model07)$adj.r.squared
model08 <- lm(mpg~am+cyl+wt+gear, data=mtcars); val[9] <- summary(model08)$adj.r.squared
model09 <- lm(mpg~am+cyl+wt+carb, data=mtcars); val[10] <- summary(model09)$adj.r.squared
head <- c("model00","model01","model02","model03","model04","model05","model06","model07",
"model08","model09")
tabVal <- cbind(head, val); colnames(tabVal) <- c("Model", "Adjusted R-sqaured")
model00 <- lm(mpg~am, data=mtcars); val[1] <- summary(model00)$adj.r.squared
val <- []
val <- ()
val <- c()
model00 <- lm(mpg~am, data=mtcars); val[1] <- summary(model00)$adj.r.squared
val <- c()
model00 <- lm(mpg~am, data=mtcars); val[1] <- summary(model00)$adj.r.squared
model01 <- lm(mpg~am+cyl, data=mtcars); val[2] <- summary(model01)$adj.r.squared
model02 <- lm(mpg~am+cyl+disp , data=mtcars); val[3] <- summary(model02)$adj.r.squared
model03 <- lm(mpg~am+cyl+hp, data=mtcars); val[4] <- summary(model03)$adj.r.squared
model04 <- lm(mpg~am+cyl+drat, data=mtcars); val[5] <- summary(model04)$adj.r.squared
model05 <- lm(mpg~am+cyl+wt, data=mtcars); val[6] <- summary(model05)$adj.r.squared
model06 <- lm(mpg~am+cyl+wt+qsec, data=mtcars); val[7] <- summary(model06)$adj.r.squared
model07 <- lm(mpg~am+cyl+wt+vs, data=mtcars); val[8] <- summary(model07)$adj.r.squared
model08 <- lm(mpg~am+cyl+wt+gear, data=mtcars); val[9] <- summary(model08)$adj.r.squared
model09 <- lm(mpg~am+cyl+wt+carb, data=mtcars); val[10] <- summary(model09)$adj.r.squared
head <- c("model00","model01","model02","model03","model04","model05","model06","model07",
"model08","model09")
tabVal <- cbind(head, val); colnames(tabVal) <- c("Model", "Adjusted R-sqaured")
write.table(tabVal)
table(tabVal)
tabVal
matrix(tabVal)
as.matrix(tabVal)
table(tabVal)
tabVal <- as.dataframe(cbind(head, val)); colnames(tabVal) <- c("Model", "Adjusted R-sqaured")
tabVal <- data.frame(cbind(head, val)); colnames(tabVal) <- c("Model", "Adjusted R-sqaured")
tabVal
tabVal <- data.frame(cbind(head, val)); colnames(tabVal) <- c("Model", "Adjusted R-sqaured")
tabVal
print(tabVal)
xtable(tabVal)
library(xtable)
library(knitr)
kable(tabVal)
t.test(mpg, am, data=mtcars)
t.test(mpg~am, data=mtcars)
test <- t.test(mpg~am, data=mtcars)
test$p.value
test
test$t
test$estimate
test$parameter
test$t
test$statistic
test <- t.test(mpg~am, data=mtcars)
test$statistic
test$p.value
anova(model0, model1, model2, model3)
anova(model00, model01, model02, model03)
anova(model00, model01, model02, model03, model04, model05)
anova(model00, model01, model02, model03, model04, model05, model06, model07, model08, model09)
anova(model00, model05)
anova(model00, model01)
anova(model00, model02)
anova(model00, model03)
anova(model00, model04)
anova(model00, model05)
anova(model00, model06)
anova(model00, model07)
anova(model00, model08)
anova(model00, model09)
anova(model00, model01)
anova(model00, model02)
anova(model00, model03)
anova(model00, model04)
anova(model00, model05)
test1 <- lm(mpg~am, data=mtcars)
test1
model <- lm(mpg~cyl+wt)
model <- lm(mpg~cyl+wt, data=mtcars)
summary(model)
summary(model10)
model10 <- lm(mpg~cyl+wt, data=mtcars); val[11] <- round(summary(model10)$adj.r.squared,2)
summary(model10)
model10$call
summary(model09)
val <- c()
model00 <- lm(mpg~am, data=mtcars); val[1] <- round(summary(model00)$adj.r.squared,2)
model01 <- lm(mpg~am+cyl, data=mtcars); val[2] <- round(summary(model01)$adj.r.squared,2)
model02 <- lm(mpg~am+cyl+disp , data=mtcars); val[3] <- round(summary(model02)$adj.r.squared,2)
model03 <- lm(mpg~am+cyl+hp, data=mtcars); val[4] <- round(summary(model03)$adj.r.squared,2)
model04 <- lm(mpg~am+cyl+drat, data=mtcars); val[5] <- round(summary(model04)$adj.r.squared,2)
model05 <- lm(mpg~am+cyl+wt, data=mtcars); val[6] <- round(summary(model05)$adj.r.squared,2)
model06 <- lm(mpg~am+cyl+wt+qsec, data=mtcars); val[7] <- round(summary(model06)$adj.r.squared,2)
model07 <- lm(mpg~am+cyl+wt+vs, data=mtcars); val[8] <- round(summary(model07)$adj.r.squared,2)
model08 <- lm(mpg~am+cyl+wt+gear, data=mtcars); val[9] <- round(summary(model08)$adj.r.squared,2)
model09 <- lm(mpg~am+cyl+wt+carb, data=mtcars); val[10] <- round(summary(model09)$adj.r.squared,2)
model10 <- lm(mpg~cyl+wt, data=mtcars); val[11] <- round(summary(model10)$adj.r.squared,2)
head <- c("model00","model01","model02","model03","model04","model05","model06","model07",
"model08","model09","model10")
tabVal <- data.frame(cbind(head, val)); colnames(tabVal) <- c("Model", "Adjusted R-sqaured")
kable(tabVal)
summary(model09)
kable(summary(model09))
tabVal
tabVal[9,2]
tabVal[1,2]
tabVal[1,]
tabVal[1,2]
tabVal[,2]
View(tabVal)
summary(model10)
plot(res(model10))
plot(resid(model10))
plot((model10))
par(mfrow(2,2)); plot(model10)
par(mfrow=c(2,2)); plot(model10)
setwd("~/GitHub/StatisticalInference")
knitr(ProjectReport.Rmd)
knit(ProjectReport.Rmd)
library(knitr)
knit(ProjectReport.Rmd)
knit("ProjectReport.Rmd")
simdata <- matrix(replicate(nsim, rexp(nsample, lambda)), nrow=nsim) # Simulated data
simdata <- matrix(replicate(nsim, rexp(40, 0.2)), nrow=1000) # Simulated data
simdata <- matrix(replicate(1000, rexp(40, 0.2)), nrow=1000) # Simulated data
mean_simdata_distribution <- apply(simdata, 1, mean) # mean of each simulated data
mean_simdata <- mean(mean_simdata_distribution) # overall mean of the simulated data
sd_simdata <- sd(mean_simdata_distribution) # overall standard deviation
var_simdata <- sd_simdata^2
lambda <- 0.2  # rate parameter
mn <- 1/lambda # mean of the distribution
nsample <- 40  # number of samples
sd_th <- 1/lambda # standard deviation
var_th <- sd_th^2 # variance
nsim <- 1000   # Number of simulations
set.seed(12345)  # For reproducibilty
simdata <- matrix(replicate(nsim, rexp(nsample, lambda)), nrow=nsim) # Simulated data
mean_simdata_distribution <- apply(simdata, 1, mean) # mean of each simulated data
mean_simdata <- mean(mean_simdata_distribution) # overall mean of the simulated data
sd_simdata <- sd(mean_simdata_distribution) # overall standard deviation
var_simdata <- sd_simdata^2
library(ggplot2)
df <- data.frame(mean_simdata_distribution)
plot <- ggplot(df, aes(x = mean_simdata_distribution)) + geom_histogram(binwidth = 0.05,aes(y = ..density..))
plot <- plot + geom_vline(xintercept=mean_simdata,size=1.0, color="blue", linetype="dotdash") +
stat_function(fun=dnorm,args=list( mean=mean_simdata, sd=sd_simdata),color = "blue", size = 1.0)
plot <- plot +geom_vline(xintercept=mn,size=1.0,color="red",linetype = "twodash") +
stat_function(fun=dnorm,args=list( mean=mn, sd=sd_th),color = "red", size = 1.0) +
ggtitle("Histogram of mean of simulated data") +xlab("Mean of simulated data") +
ylab("Density") + annotate("text", x = 7, y = 0.5, label = "Red : Represent theoritical data", colour="red") +
annotate("text", x = 7, y = 0.45, label = "Blue : Represent simulated data", colour="blue")
print(plot)
ggplot(df, aes(x = mean_simdata_distribution)) + geom_histogram(binwidth = 0.05,aes(y = ..density..))
plot <- ggplot(df, aes(x = mean_simdata_distribution)) + geom_histogram(binwidth = 0.05,aes(y = ..density..))
plot <- plot + geom_vline(xintercept=mean_simdata,size=1.0, color="blue", linetype="dotdash") +
stat_function(fun=dnorm,args=list( mean=mean_simdata, sd=sd_simdata),color = "blue", size = 1.0)
plot
plot <- plot +geom_vline(xintercept=mn,size=1.0,color="red",linetype = "twodash") +
stat_function(fun=dnorm,args=list( mean=mn, sd=sd_th),color = "red", size = 1.0) +
ggtitle("Histogram of mean of simulated data") +xlab("Mean of simulated data") +
ylab("Density")
plot
plot <- ggplot(df, aes(x = mean_simdata_distribution)) + geom_histogram(binwidth = 0.05,aes(y = ..density..))
plot
plot <- plot +geom_vline(xintercept=mn,size=1.0,color="red",linetype = "twodash") +
stat_function(fun=dnorm,args=list( mean=mn, sd=sd_th),color = "red", size = 1.0)
plot
q()
